name: Pulumi Update

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - 'images/**'
      - 'backend-setup/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - 'images/**'
      - 'backend-setup/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1
  AWS_DEFAULT_REGION: ap-southeast-1
  STACK_NAME: dev
  PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
  S3_BUCKET: devopslite-dev-infra-state-bucket

jobs:
  checkov:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov

      - name: Scan Pulumi with Checkov
        run: checkov -d . --quiet

  pulumi:
    needs:
      - checkov
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r infra/requirements.txt
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Pulumi Login
        run: |
          pulumi login s3://${{ env.S3_BUCKET }}?region=${{ env.AWS_REGION }}
      
      - name: Pulumi Stack
        run: |
          cd infra
          if pulumi stack select "$STACK_NAME"; then
            echo "Stack $STACK_NAME exists and selected."
          else
            echo "Stack $STACK_NAME does not exist. Creating it..."
            pulumi stack init "$STACK_NAME"
          fi

      - name: Pulumi Preview Changes
        run: |
          cd infra
          pulumi preview --stack ${{ env.STACK_NAME }} --color always
      
      - name: Update Pulumi stack
        run: |
          cd infra
          pulumi up --stack ${{ env.STACK_NAME }} --yes --color always
